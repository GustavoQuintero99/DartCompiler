/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import lexico.AnalisisLexico;

/**
 *
 * @author Bryan.Ramos
 */
public class Main extends javax.swing.JFrame {

    private Editor editor;

    /**
     * Creates new form Principal
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        dialogoChooser = new javax.swing.JFileChooser();
        jSplitPane1 = new javax.swing.JSplitPane();
        archivos = new javax.swing.JTabbedPane();
        salidas = new javax.swing.JTabbedPane();
        textArea2 = new java.awt.TextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Compilaneitor");
        setPreferredSize(new java.awt.Dimension(800, 800));
        setSize(new java.awt.Dimension(800, 800));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jSplitPane1.setDividerLocation(200);
        jSplitPane1.setDividerSize(1);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setPreferredSize(new java.awt.Dimension(300, 600));

        archivos.setPreferredSize(new java.awt.Dimension(300, 600));
        jSplitPane1.setLeftComponent(archivos);

        salidas.addTab("tab1", textArea2);

        jSplitPane1.setRightComponent(salidas);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        fileMenu.setText("Archivo");

        jMenuItem1.setText("Nuevo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem1);

        jMenuItem2.setText("Abrir");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem2);

        jMenuItem3.setText("Guardar");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem3);

        jMenuItem4.setText("Guardar como");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem4);

        jMenuItem7.setText("Guardar todo");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem7);

        jMenuItem5.setText("Cerrar");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem5);

        jMenuItem6.setText("Cerrar todo");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem6);

        jMenuBar1.add(fileMenu);

        jMenu2.setText("Editar");
        jMenuBar1.add(jMenu2);

        jMenu1.setText("Ejecutar");

        jMenuItem8.setText("Ejecutar");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem8);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(archivos.getSelectedComponent()==null){
            System.exit(0);
        }
        String[] options = {"Si", "No", "Cancelar"};
        int x = JOptionPane.showOptionDialog(this, "¿Guardar antes de cerrar?",
                "Se cerrara el editor",
                JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        switch (x) {
            case 0:
                saveAll();
                System.exit(0);
                break;
            case 1:
                System.exit(0);
                break;
            case 2:
                break;
            default:
                break;
        }
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
            try {
            int response = dialogoChooser.showSaveDialog(this);
            if (response == dialogoChooser.APPROVE_OPTION) {
                File archivo = dialogoChooser.getSelectedFile();
                if (archivo != null) {
                    if (!archivo.exists()) {
                        editor = new Editor(archivo);
                        archivos.addTab(archivo.getName(), editor);
                        archivos.setSelectedComponent(editor);
                    } else {
                        String[] options = {"Si", "No"};
                        int x = JOptionPane.showOptionDialog(this, "Desea sobreescribir el archivo?",
                                "¿Desea sobreescribir el archivo " + archivo.getName() + "?",
                                JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                        switch (x) {
                            case 0:
                                editor = new Editor(archivo);
                                archivos.addTab(archivo.getName(), editor);
                                archivos.setSelectedComponent(editor);
                                break;
                            case 1:
                            default:
                                break;
                        }
                    }
                }
            }

        } catch (Error e) {
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
                int response = dialogoChooser.showOpenDialog(this);
        if (response == dialogoChooser.APPROVE_OPTION) {
            File archivo = dialogoChooser.getSelectedFile();
            boolean opened = false;
            for (int i = 0; i < archivos.getComponentCount(); i++) {
                Editor editor = (Editor) archivos.getComponentAt(i);
                System.out.println(editor.getArchivo().getPath() + "\n" + archivo.getPath());
                String comparation1 = editor.getArchivo().getPath();
                String comparation2 = archivo.getPath();
                if (comparation2.equals(comparation1)) {
                    opened = true;
                }
            }
            if (archivo.exists() && opened == false) {
                editor = new Editor(archivo);
                try {
                    editor.leerArchivo();
                } catch (IOException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
                archivos.addTab(archivo.getName(), editor);
                archivos.setSelectedComponent(editor);
            } else {
                JOptionPane.showMessageDialog(this, "El archivo ya se encuentra abierto");

            }

        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        editor = (Editor) archivos.getSelectedComponent();
        if (editor != null) {
            try {
                editor.guardar();
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        if (archivos.getSelectedComponent() != null) {
            int response = dialogoChooser.showSaveDialog(this);
            if (response == dialogoChooser.APPROVE_OPTION) {
                File archivo = dialogoChooser.getSelectedFile();
                if (!archivo.exists()) {
                    load(archivo, false);
                } else {
                    String[] options = {"Si", "No"};
                    int x = JOptionPane.showOptionDialog(this, "Desea sobreescribir el archivo existente?",
                            "¿Desea reemplazar el archivo " + archivo.getName() + "?",
                            JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
                    switch (x) {
                        case 0:
                            load(archivo, true);
                            break;
                        case 1:
                        default:
                            break;
                    }

                }
            }
            }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        editor = (Editor) archivos.getSelectedComponent();
        if (editor != null) {
            closeAndLoad(editor);
            archivos.remove(archivos.getSelectedComponent());
        }

    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        while (archivos.getComponentCount() > 0) {
            editor = (Editor) archivos.getComponentAt(0);
            closeAndLoad(editor);
            archivos.remove(archivos.getSelectedComponent());

        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        saveAll();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        AnalisisLexico analyzer = new AnalisisLexico(); 
        File file = editor.getArchivo();
        try{
            analyzer.runLexer(file, textArea2);
        }catch(Exception e) {
            System.out.println(e.toString());
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed
    public void load(File archivo, boolean remove) {
        editor = (Editor) archivos.getSelectedComponent();
        String information = editor.getText();
        editor = new Editor(archivo);
        editor.setearTexto(information);
        try {
            editor.guardar();
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (remove == true) {
            archivos.remove(archivos.getSelectedComponent());
        }
        archivos.add(editor.getArchivo().getName(), editor);
        archivos.setSelectedComponent(editor);
    }

    public void closeAndLoad(Editor editor) {
        File archivo = editor.getArchivo();
        String[] options = {"Si", "No"};
        int x = JOptionPane.showOptionDialog(this, "Si no lo guarda, se perderan los cambios",
                "¿Desea guardar el archivo " + archivo.getName() + "?",
                JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, options, options[0]);
        System.out.println(x);
        switch (x) {
            case 0: {
                try {
                    editor.guardar();
                } catch (IOException ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            case 1:
                break;
            default:
                System.out.println("Ocurrio algo jaja alchile");
        }
    }

    public void saveAll() {
        for (int i = 0; i < archivos.getComponentCount(); i++) {
            editor = (Editor) archivos.getComponentAt(i);
            try {
                editor.guardar();
            } catch (IOException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane archivos;
    private javax.swing.JFileChooser dialogoChooser;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane salidas;
    private java.awt.TextArea textArea2;
    // End of variables declaration//GEN-END:variables
}
